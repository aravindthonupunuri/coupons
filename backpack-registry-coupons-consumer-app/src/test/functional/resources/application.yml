micronaut:
  application:
    name: backpack-registry-coupons-consumer-app
  server:
    port: ${server-port:33000}
  http:
    client.connect-ttl: 30m
    services:
      backpack-registry-api:
        urls:
          - http://localhost:${server-port:32000}
        pool:
          enabled: false
  metrics:
    binders:
      web:
        enabled: false # we are using our own binder via our custom micronaut-metrics lib

resilience4j:
  circuit-breaker:
    failure-rate-threshold: 50            # failure rate threshold in percentage (default: 50)
    wait-duration-secs-in-open-state: 10  # time cb waits before transitioning from open to half-open (default: 60s)
    sliding-window-type: TIME_BASED       # possible values TIME_BASED or COUNT_BASED (default: COUNT_BASED)
    sliding-window-size: 100               # seconds for TIME_BASED, request-count for COUNT_BASED (default: 100)
    minimum-number-of-calls: 10            # min calls required (per sliding window period) before cb calculates error rate (default: 10)
    permitted-number-of-calls-in-half-open-state: 10 # Number of permitted calls when the CircuitBreaker is half open.

jdbc-stmt:
  serverStatementTimeoutMillis: 250  # for server side statement timeout
  statementQueryTimeoutSeconds: 1    # for client side statement timeout
  fetchSize: 1000                    # for controlling jdbc ResultSet fetch size globally (default 0)

jackson:
  property-naming-strategy: "SNAKE_CASE"

components:
  server:
    list-authorization-filter:
      enabled: false
    sanitizing-filter:
      enabled: false
    registry-channel-subchannel-filter:
      enabled: false

#  ssl:
#    keystore:
#      location: /path/to/client.keystore.p12
#      password: secret
#    truststore:
#      location: /path/to/client.truststore.jks
#      password: secret
#      type: PKCS12
#  security:
#    protocol: ssl

msgbus:
  source: backpack-registry-coupons
  dlq-source: backpack-registry-coupons-dlq
  kafka:
    consumer:
      enabled: true
    producer:
      enabled: true
      client-id: backpack-registry-coupons-bus-test-producer
    dlqconsumer:
      enabled: true
    dlqproducer:
      enabled: true
      client-id: backpack-registry-coupons-bus-test-dlq-producer
    topic: registry-internal-data-bus-stage
    consumer-group: backpack-registry-coupons-bus-test-consumer
    consumer-batch-size: 10
    dlq-topic: registry-internal-data-bus-stage-dlq
    dlq-consumer-group: backpack-registry-coupons-bus-test-dlq-consumer
    dlq-event-retry-interval-secs: 1
    dlq-max-event-retry-count: 3
    dlq-consumer-batch-size: 10

kafka:
  embedded:
    enabled: false
  consumers:
    backpack-registry-coupons-bus-test-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    backpack-registry-coupons-bus-test-dlq-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    backpack-registry-coupons-cron-beacon-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  producers:
    backpack-registry-coupons-bus-test-producer:
      key:
        serializer: org.apache.kafka.common.serialization.StringSerializer
      value:
        serializer: com.tgt.lists.msgbus.ListsJsonSerde
      retries: 3
      retry:
        backoff:
          ms: 1000
      max:
        in:
          flight:
            requests:
              per:
                connection: 1
        block:
          ms: 2000
    backpack-registry-coupons-bus-test-dlq-producer:
      key:
        serializer: org.apache.kafka.common.serialization.StringSerializer
      value:
        serializer: com.tgt.lists.msgbus.ListsJsonSerde
      retries: 3
      retry:
        backoff:
          ms: 1000
      max:
        in:
          flight:
            requests:
              per:
                connection: 1
        block:
          ms: 2000
    notification-tracer-client-producer:
      key:
        serializer: org.apache.kafka.common.serialization.StringSerializer
      value:
        serializer: com.tgt.lists.msgbus.ListsJsonSerde
      retries: 3
      retry:
        backoff:
          ms: 1000
      max:
        in:
          flight:
            requests:
              per:
                connection: 1
        block:
          ms: 2000

api-key: "testkey"

filter:
  server:
    order:
      lists-brave-tracing-server-filter: 100
      lists-traceid-filter: 101
      list-authorization-filter: 200
      registry-channel-subchannel-filter: 400
  client:
    order:
      lists-brave-tracing-client-filter: 900
      resilience-client-filter: 800
      oauth-filter: 701
      oauth-key-filter: 700

list:
  list-type: REGISTRY

mockfilter:
  paths: /zipkin,/testserver/auth/oauth/v2/token,/,/redsky_aggregations/v1.*,/registries/v2.*

tracing:
  zipkin:
    enabled: true
    excluded-paths: /health
    sampler:
      probability: 1
    http:
      url: http://localhost:9411/zipkin

endpoints:
  prometheus:
    sensitive: false

kafka-sources:
  allow:
    - cronbeacon
    - backpack-registry
    - backpack-transactions

beacon:
  client:
    enabled: true
    source: backpack-registry-coupons
    dlq-source: backpack-registry-coupons-dlq
    kafka:
      consumer:
        client-id: backpack-registry-coupons-cron-beacon-consumer
        topic: beacon-topic
        metrics-name: backpack-registry-coupons-beacon-metrics
        consumer-group: backpack-registry-coupons-cron-beacon-consumer
        consumer-batch-size: 1
        max-count-down-latch-wait-time: 240 # in secondsConsumerRecord

notification-tracer:
  client-id: notification-tracer-client-producer
  source: testtracerclient
  dlq-source: testtracerclient-dlq
  kafka:
    producer:
      enabled: true
    topic: tracer-general-input

registry:
  baby:
    sla: 56
    coupon-types:
      - STORE
      - ONLINE
  wedding:
    sla: 7
    coupon-types:
      - STORE
      - ONLINE
  completion-coupon:
    sla: 14
    expiration-days: 180
    db-fetch-size: 2
    coupon-assignment-hour-of-day: 2
    coupon-assignment-minute-block-of-hour: 1
