micronaut:
  application:
    name: backpack-registry-coupons-promo-consumer-app
  server:
    port: ${server-port:33000}

resilience4j:
  circuit-breaker:
    failure-rate-threshold: 50            # failure rate threshold in percentage (default: 50)
    wait-duration-secs-in-open-state: 10  # time cb waits before transitioning from open to half-open (default: 60s)
    sliding-window-type: TIME_BASED       # possible values TIME_BASED or COUNT_BASED (default: COUNT_BASED)
    sliding-window-size: 100               # seconds for TIME_BASED, request-count for COUNT_BASED (default: 100)
    minimum-number-of-calls: 10            # min calls required (per sliding window period) before cb calculates error rate (default: 10)
    permitted-number-of-calls-in-half-open-state: 10  # min calls permitted when circuit breaker is half open

jdbc-stmt:
  serverStatementTimeoutMillis: 250  # for server side statement timeout
  statementQueryTimeoutSeconds: 1    # for client side statement timeout

jackson:
  property-naming-strategy: "SNAKE_CASE"

components:
  server:
    list-authorization-filter:
      enabled: false
    sanitizing-filter:
      enabled: false
    registry-channel-subchannel-filter:
      enabled: false

#  ssl:
#    keystore:
#      location: /path/to/client.keystore.p12
#      password: secret
#    truststore:
#      location: /path/to/client.truststore.jks
#      password: secret
#      type: PKCS12
#  security:
#    protocol: ssl

msgbus:
  source: backpacktransactions
  dlq-source: backpacktransactions-dlq
  kafka:
    consumer:
      enabled: false
    producer:
      enabled: true
      client-id: lists-promo-msg-bus-kafkapp-producer
    dlqconsumer:
      enabled: true
    dlqproducer:
      enabled: true
      client-id: lists-promo-dlq-kafkapp-producer
    topic: lists-msg-bus
    consumer-group: lists-promo-msg-bus-kafkapp-consumer
    consumer-batch-size: 10
    dlq-topic: lists-dlq
    dlq-consumer-group: lists-promo-dlq-kafkapp-consumer
    dlq-event-retry-interval-secs: 1
    dlq-max-event-retry-count: 3
    dlq-consumer-batch-size: 10

kafka:
  consumers:
    lists-promo-msg-bus-kafkapp-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    lists-promo-dlq-kafkapp-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    promo-msg-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer

  producers:
    lists-promo-msg-bus-kafkapp-producer:
      key:
        serializer: org.apache.kafka.common.serialization.StringSerializer
      value:
        serializer: com.tgt.lists.msgbus.ListsJsonSerde
      retries: 3
      retry:
        backoff:
          ms: 1000
      max:
        in:
          flight:
            requests:
              per:
                connection: 1
        block:
          ms: 2000
    lists-promo-dlq-kafkapp-producer:
      key:
        serializer: org.apache.kafka.common.serialization.StringSerializer
      value:
        serializer: com.tgt.lists.msgbus.ListsJsonSerde
      retries: 3
      retry:
        backoff:
          ms: 1000
      max:
        in:
          flight:
            requests:
              per:
                connection: 1
        block:
          ms: 2000
  embedded:
    enabled: false

kafka-sources:
  allow:
    - generic
    - backpacktransactions-dlq

promo:
  source: generic
  kafka:
    consumer:
      client-id: backpack-promo-generic-consumer
      topic: generic-bus
      metrics-name: test-producer
      consumer-group: promo-msg-consumer
      default-event-type: promo-update-event
      consumer-batch-size: 10
      max-count-down-latch-wait-time: 10 # in seconds

api-key: "testkey"

filter:
  server:
    order:
      lists-brave-tracing-server-filter: 100
      lists-traceid-filter: 101
      list-authorization-filter: 200
      registry-channel-subchannel-filter: 400
  client:
    order:
      lists-brave-tracing-client-filter: 900
      resilience-client-filter: 800
      oauth-filter: 701
      oauth-key-filter: 700

list:
  list-type: REGISTRY

flyway:
  schemas: grwstransaction
  datasources:
    default:
      locations: classpath:db.migration

tracing:
  zipkin:
    enabled: true
    excluded-paths: /health
    sampler:
      probability: 1
    http:
      url: http://localhost:9411/zipkin

mockfilter:
  paths: /zipkin,/testserver/auth/oauth/v2/token,/

logging:
  mdc:
    enabled: true
    keys:
      - profile_id
      - x-api-id
    filter:
      path: /testserver/**

