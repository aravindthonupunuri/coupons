micronaut:
  application:
    name: backpack-registry-coupons-migration-consumer-app
  server:
    port: ${server-port:33000}
  metrics:
    binders:
      web:
        enabled: false # we are using our own binder via our custom micronaut-metrics lib

resilience4j:
  circuitbreaker:
    failure-rate-threshold: 50            # failure rate threshold in percentage (default: 50)
    wait-duration-secs-in-open-state: 10  # time cb waits before transitioning from open to half-open (default: 60s)
    sliding-window-type: TIME_BASED       # possible values TIME_BASED or COUNT_BASED (default: COUNT_BASED)
    sliding-window-size: 100               # seconds for TIME_BASED, request-count for COUNT_BASED (default: 100)
    minimum-number-of-calls: 10            # min calls required (per sliding window period) before cb calculates error rate (default: 10)
    permitted-number-of-calls-in-half-open-state: 10 # Number of permitted calls when the CircuitBreaker is half open.

jdbc-stmt:
  serverStatementTimeoutMillis: 250  # for server side statement timeout
  statementQueryTimeoutSeconds: 1    # for client side statement timeout
  fetchSize: 1000                    # for controlling jdbc ResultSet fetch size globally (default 0)

jackson:
  property-naming-strategy: "SNAKE_CASE"


kafka:
  consumers:
    lists-msg-bus-consumer-backpack-registry-coupons-migration:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    lists-dlq-consumer-backpack-registry-coupons-migration:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  producers:
    # default is a Jackson based JSON serializer for key/value
    lists-msg-bus-producer:
      retries: 3
      retry:
        backoff:
          ms: 1_000
      max:
        in:
          flight:
            requests:
              per:
                connection: 1
        block:
          ms: 2_000

components:
  server:
    list-authorization-filter:
      enabled: false
    sanitizing-filter:
      enabled: false

#  ssl:
#    keystore:
#      location: /path/to/client.keystore.p12
#      password: secret
#    truststore:
#      location: /path/to/client.truststore.jks
#      password: secret
#      type: PKCS12
#  security:
#    protocol: ssl

msgbus:
  source: backpack-registry-coupons-migration
  dlq-source: backpack-registry-coupons-migration-dlq
  kafka:
    consumer:
      enabled: true
    producer:
      enabled: true
    dlqconsumer:
      enabled: true
    dlqproducer:
      enabled: true
    topic: lists-msg-bus
    consumer-group: lists-msg-bus-consumer-backpack-registry-coupons-migration
    consumer-batch-size: 10
    dlq-topic: lists-dlq
    dlq-consumer-group: lists-dlq-consumer-backpack-registry-coupons-migration
    dlq-event-retry-interval-secs: 1
    dlq-max-event-retry-count: 3
    dlq-consumer-batch-size: 10

api-key: "testkey"

filter:
  server:
    order:
      lists-brave-tracing-server-filter: 100
      lists-traceid-filter: 101
      list-authorization-filter: 200
  client:
    order:
      lists-brave-tracing-client-filter: 900
      resilience-client-filter: 800
      oauth-filter: 701
      oauth-key-filter: 700

list:
  list-type: REGISTRY
#  max-count: 50
#  max-pending-item-count: 3
#  max-completed-items-count: 3
#  abandon-after-duration-in-days: 730 # It is two years duration
#  redsky-batch-size: 28
#  features.dedupe: true
#  features.sort-position: true
#  features.fixed-default-list: false



mockfilter:
  paths: /zipkin,/testserver/auth/oauth/v2/token,/storeItemPlacements,/ssa/cwlservice/api/v16/.*

tracing:
  zipkin:
    enabled: true
    excluded-paths: /health
    sampler:
      probability: 1
    http:
      url: http://localhost:9411/zipkin

endpoints:
  prometheus:
    sensitive: false

kafka-sources:
  allow:
    - backpack-registry-coupons-migration
    - backpack-registry-coupons-migration-dlq
    - cronbeacon
    - cronbeacon-dlq
    - backpack-registry
    - backpack-registry-dlq

beacon:
  client:
    enabled: true
    source: lists-msg-bus-kafkapp-consumer
    dlq-source: lists-msg-bus-kafkapp-consumer-dlq
    kafka:
      consumer:
        client-id: backpack-registry-coupons-migration-cron-beacon-consumer
        topic: lists-msg-bus
        metrics-name: backpack-registry-coupons-migration-beacon-metrics
        consumer-group: backpack-registry-coupons-migration-cron-beacon-consumer
        consumer-batch-size: 1
        max-count-down-latch-wait-time: 240 # in secondsConsumerRecord

notification-tracer:
  source: testtracerclient
  dlq-source: testtracerclient-dlq
  kafka:
    producer:
      enabled: true
    topic: tracer-incoming-events

registry:
  baby:
    sla: 7
    coupon-types:
      - STORE
      - ONLINE
  wedding:
    sla: 56
    coupon-types:
      - STORE
      - ONLINE
  completion-coupon:
    sla: 14
    coupon-assignment-hour-of-day: 2
    coupon-assignment-minute-block-of-hour: 1
